{
    "swagger": "2.0",
    "info": {
        "description": "This is moc local-service server.",
        "title": "MOC Local Service API",
        "contact": {
            "name": "API Support",
            "url": "https://github.com/sukki37",
            "email": "shuqi.qin@matrixorigin.io"
        },
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/CreateOriginVolume": {
            "post": {
                "description": "@deprecated from v3.3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "origin volume"
                ],
                "summary": "create origin volume",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_handlers_origin_volume.CreateOriginVolumeReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/DeleteOriginVolume": {
            "post": {
                "description": "delete files in origin volume step-by-step, @deprecated from v3.3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "origin volume"
                ],
                "summary": "delete origin volume and files",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_handlers_origin_volume.DeleteOriginVolumeReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/DeleteOriginVolumeFiles": {
            "post": {
                "description": "@deprecated from v3.3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "origin volume"
                ],
                "summary": "delete origin volume files",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_handlers_origin_volume.DeleteOriginVolumeFilesReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/DescribeOriginVolume": {
            "post": {
                "description": "@deprecated from v3.3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "origin volume"
                ],
                "summary": "list origin volume files (with filter)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_handlers_origin_volume.DescribeOriginVolumeResp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg_handlers_origin_volume.DescribeOriginVolumeResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/DescribeOriginVolumes": {
            "post": {
                "description": "@deprecated from v3.3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "origin volume"
                ],
                "summary": "get all origin volumes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg_handlers_origin_volume.DescribeOriginVolumesResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/GetOriginVolumeFileLink": {
            "post": {
                "description": "@deprecated from v3.3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "origin volume"
                ],
                "summary": "get origin volume file download link",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_handlers_origin_volume.GetOriginVolumeFileLinkReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg_handlers_origin_volume.GetOriginVolumeFileLinkResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/GetOriginVolumeFilePreviewLink": {
            "post": {
                "description": "@deprecated from v3.3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "origin volume"
                ],
                "summary": "get origin volume file preview link",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_handlers_origin_volume.GetFilePreviewLinkReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg_handlers_origin_volume.GetFilePreviewLinkResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/ai/message/feedback": {
            "post": {
                "description": "send feedback for a message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ai"
                ],
                "parameters": [
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.MessageFeedbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.MessageFeedbackResponse"
                                        }
                                    }
                                }
                            ]
                        },
                        "headers": {
                            "access-token": {
                                "type": "string",
                                "description": "access-token"
                            },
                            "refresh-token": {
                                "type": "string",
                                "description": "refresh-token"
                            }
                        }
                    }
                }
            }
        },
        "/ai/message/query": {
            "post": {
                "description": "handles ai query message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ai"
                ],
                "parameters": [
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.MessageQueryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.MessageQueryResponse"
                                        }
                                    }
                                }
                            ]
                        },
                        "headers": {
                            "access-token": {
                                "type": "string",
                                "description": "access-token"
                            },
                            "refresh-token": {
                                "type": "string",
                                "description": "refresh-token"
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "handles login requests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "parameters": [
                    {
                        "description": "user and password are required to log in",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.LoginResponse"
                                        }
                                    }
                                }
                            ]
                        },
                        "headers": {
                            "access-token": {
                                "type": "string",
                                "description": "access-token"
                            },
                            "refresh-token": {
                                "type": "string",
                                "description": "refresh-token"
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "handles logout requests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        },
                        "headers": {
                            "access-token": {
                                "type": "string",
                                "description": "access-token"
                            }
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "handles token refresh requests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.LoginResponse"
                                        }
                                    }
                                }
                            ]
                        },
                        "headers": {
                            "access-token": {
                                "type": "string",
                                "description": "access-token"
                            },
                            "refresh-token": {
                                "type": "string",
                                "description": "refresh-token"
                            }
                        }
                    }
                }
            }
        },
        "/auth/token": {
            "post": {
                "description": "handles access token for websocket connection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        },
                        "headers": {
                            "access-token": {
                                "type": "string",
                                "description": "access-token"
                            }
                        }
                    }
                }
            }
        },
        "/connectors": {
            "post": {
                "description": "create new workspace connector (supports OSS, S3, DIFY, HDFS, etc.)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "connectors"
                ],
                "summary": "create new workspace connector",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/connector.CreateConnectorReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/connectors/files/list": {
            "get": {
                "description": "list workspace connector file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "connectors"
                ],
                "summary": "list workspace connector file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/connector.ListConnectorFileReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/connector.ListConnectorFileResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/connectors/list": {
            "get": {
                "description": "list connector with filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "connectors"
                ],
                "summary": "list connector with filter",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/connector.QueryConnectorReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/connector.QueryConnectorResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/connectors/mo/check_table_name": {
            "post": {
                "description": "check table name exists",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "connectors"
                ],
                "summary": "check table name exists",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_connector.CheckTableNameExistsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_connector.CheckTableNameExistsResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/connectors/mo/column/mapping": {
            "post": {
                "description": "list source columns's mapping columns in dest db",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "connectors"
                ],
                "summary": "list source columns's mapping columns in dest db",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_connector.TableColumnMappingReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_connector.TableColumnMappingResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/connectors/mo/database/list": {
            "post": {
                "description": "list databases",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "connectors"
                ],
                "summary": "list databases",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_connector.ListDatabasesReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_connector.ListDatabasesResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/connectors/mo/database/table/list": {
            "post": {
                "description": "list database's tables",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "connectors"
                ],
                "summary": "list database's tables",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_connector.ListDatabaseTablesReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_connector.ListDatabaseTablesResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/connectors/summary": {
            "get": {
                "description": "get connector summary (emtpy)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "connectors"
                ],
                "summary": "get connector summary (emtpy)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_connector.ConnectorSummaryResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/connectors/upload": {
            "post": {
                "description": "upload local disk file into connector",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "connectors"
                ],
                "summary": "upload local disk file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "multi file data \u0026 request param (!!wait more desc!!)",
                        "name": "data",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_connector.UploadFileResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/connectors/validate": {
            "post": {
                "description": "validate connector info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "connectors"
                ],
                "summary": "validate connector info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/connector.ValidateConnectorReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/connector.ValidateConnectorResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/connectors/{id}": {
            "put": {
                "description": "update connector",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "connectors"
                ],
                "summary": "update connector",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "connector id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/connector.UpdateConnectorReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete connector",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "connectors"
                ],
                "summary": "delete connector",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "connector id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/instance/info": {
            "post": {
                "description": "returns the instance level information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg_handlers_instance.DescribeInstanceInfoResponse"
                                        }
                                    }
                                }
                            ]
                        },
                        "headers": {
                            "access-token": {
                                "type": "string",
                                "description": "access-token"
                            }
                        }
                    }
                }
            }
        },
        "/load/tpchsample": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "loads the sample TPCH data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of user",
                        "name": "uid",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg_handlers_load.LoadSampleDataResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/log/role": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "retrieves role operation log list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "log"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_log.LogListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_log.LogListResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/log/user": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "retrieves user operation log list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "log"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_log.LogListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_log.LogListResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/meta/db/drop": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "deletes a specific database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meta"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_handlers_meta.DropDBRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/meta/db/info": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "retrieves all databases",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meta"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_handlers_meta.ListDatabaseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg_handlers_meta.ListDatabaseResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/meta/db/table": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "retrieves all tables/views for specific dbs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meta"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_handlers_meta.ListTableViewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg_handlers_meta.ListTableViewResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/meta/db/tree": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "retrieves all tables/views for specific dbs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meta"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_handlers_meta.DescribeDBTreeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg_handlers_meta.DescribeDBTreeResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/meta/table/column": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "returns basic column info for table",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meta"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_handlers_meta.ListTableColumnsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg_handlers_meta.ListTableColumnsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/meta/table/column_stat": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "returns column stats info for table",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meta"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_handlers_meta.ListTableColumnsStatsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg_handlers_meta.ListTableColumnStatsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/meta/table/ddl": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "returns create table sql for table",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meta"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_handlers_meta.DescribeTableDDLRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg_handlers_meta.DescribeTableDDLResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/meta/table/drop": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "deletes a specific table",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meta"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_handlers_meta.DropTableViewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/meta/table/info": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "returns basic info for table or view",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meta"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_handlers_meta.ListTableInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg_handlers_meta.ListTableInfoResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/meta/view/drop": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "deletes a specific view",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meta"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_handlers_meta.DropTableViewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/metric/runtime": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "retrieves metric data for multiple metrics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metric"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/metric.OBMetricQueryReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/priv/list": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "retrieves priv list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "priv"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_priv.PrivListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_priv.PrivListResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/publication/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create a publication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of user",
                        "name": "uid",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.CreatePublicationResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/publication/delete": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete a publication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of user",
                        "name": "uid",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.DeletePublicationResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/publication/list": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "list publications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of user",
                        "name": "uid",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.ListPublicationResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/publication/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update a publication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of user",
                        "name": "uid",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.UpdatePublicationResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/query/describe": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "describes query and retruns the statement ID and current DB name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of user",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_sqlquery.DescribeQueryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_sqlquery.DescribeQueryResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/query/detail": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "retrieves sql detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/local_service.DescribeQueryDetailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/system.StatementInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/query/execute": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "executes the specified query and retruns the statement ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of user",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_sqlquery.ExecuteQueryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_sqlquery.ExecuteQueryResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/query/history": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "retrieves sql query_info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/local_service.DescribeQueryHistoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/local_service.DescribeQueryHistoryResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/query/kill": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "kills the running query of the current connection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of user",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_sqlquery.KillQueryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/query/profile": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "retrieves explain data for sql",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/local_service.DescribeQueryProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/local_service.DescribeQueryProfileResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/query/result": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "retrieves result for sql",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/local_service.DescribeQueryResultRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/local_service.DescribeQueryResultResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/query/result/download": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "retrieves result download url for sql",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/local_service.DownloadQueryResultRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/local_service.DownloadQueryResultResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/role/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create role list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_role.RoleCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/role/delete": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_role.RoleDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/role/info": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get role info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_role.RoleInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_role.RoleResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/role/list": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "retrieves role list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_role.RoleListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_role.RoleListResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/role/update_info": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update role info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_role.RoleUpdateInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/role/update_status": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update role status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_role.RoleUpdateStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/subscribe/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create a subscription database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of user",
                        "name": "uid",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.CreateSubscriptionResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/subscribe/delete": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete a subscription database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of user",
                        "name": "uid",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.DeleteSubscriptionResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/subscribe/list": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "list subscription databases",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of user",
                        "name": "uid",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.ListSubscriptionResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/subscribe/tpchsample": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "subscribe the TPCH data from publication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of user",
                        "name": "uid",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg_handlers_load.LoadSampleDataResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/subscribe/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update a subscription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of user",
                        "name": "uid",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.UpdateSubscriptionResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/target_instance/search": {
            "post": {
                "description": "returns instances that just have id and name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.SearchInstancesResponse"
                                        }
                                    }
                                }
                            ]
                        },
                        "headers": {
                            "access-token": {
                                "type": "string",
                                "description": "access-token"
                            }
                        }
                    }
                }
            }
        },
        "/task": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "create load task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "json data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_task.CreateTaskReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/task/delete": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "delete task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "json data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_task.DeleteTaskReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/task/files": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "list task files and status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "json data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_task.ListTaskFilesReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_task.ListTaskFilesResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/task/get": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "get task info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "json data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_task.GetTaskReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_task.GetTaskResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/task/list": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "list task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "json data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_task.ListTaskReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_task.ListTaskResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/task/pause": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "pause task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "json data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_task.PauseTaskReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/task/resume": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "resume task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "json data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_task.ResumeTaskReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/task/retry": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "retry task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "json data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_task.RetryTaskReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/task/update": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "update task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "json data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_task.UpdateTaskReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/user/contact": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Sending emails",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "test",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_user.ContactUSRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/user/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_handlers_user.UserCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/user/delete": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_handlers_user.DeleteUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/user/detail_info": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get user info by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_handlers_user.UserDetailInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg_handlers_user.UserDetailInfoResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/info": {
            "post": {
                "description": "returns the current user info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_user.DescribeUserInfoResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/list": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "retrieves user list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_handlers_user.UserListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg_handlers_user.UserListResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/me/api-key": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get api key of yourself",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg_handlers_user.ApiKeyResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/me/api-key/refresh": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "refresh api key of yourself",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/user/me/update_info": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update user self info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_handlers_user.MeUpdateInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/user/me/update_password": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update password of yourself",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_handlers_user.MeUpdatePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/user/update_info": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update user info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_handlers_user.UpdateInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/user/update_password": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update user' password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_handlers_user.UpdatePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/user/update_role_list": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update user's role list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_handlers_user.UpdateRoleListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/user/update_status": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update user's status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of account",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_handlers_user.UpdateUserStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/workbook/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create workbook",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workbook"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of user",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_workbook.CreateWorkBookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/workbook/delete": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete workbook",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workbook"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of user",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "workbook_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_workbook.DeleteWorkBookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/workbook/detail": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get workbook detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workbook"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of user",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "workbook_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_workbook.GetWorkBookVersionDetailRequest"
                        }
                    },
                    {
                        "description": "json format",
                        "name": "version_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_workbook.GetWorkBookVersionDetailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/workbook/list": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List workbook",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workbook"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of user",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_workbook.ListWorkBookRequest"
                        }
                    },
                    {
                        "description": "json format",
                        "name": "offset",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_workbook.ListWorkBookRequest"
                        }
                    },
                    {
                        "description": "json format",
                        "name": "limit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_workbook.ListWorkBookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/workbook/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update workbook",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workbook"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of user",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "workbook_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_workbook.UpdateWorkBookRequest"
                        }
                    },
                    {
                        "description": "json format",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_workbook.UpdateWorkBookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/workbook/version/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create workbook version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workbook"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of user",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "workbook_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_workbook.CreateWorkBookVersionRequest"
                        }
                    },
                    {
                        "description": "json format",
                        "name": "sql_content",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_workbook.CreateWorkBookVersionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/workbook/version/list": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List workbook version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workbook"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of user",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "workbook_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_workbook.ListWorkBookVersionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/workbook/version/save": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Save workbook from draft to finalize",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workbook"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of user",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "workbook_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_workbook.SaveWorkBookRequest"
                        }
                    },
                    {
                        "description": "json format",
                        "name": "version_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_workbook.SaveWorkBookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/workbook/version/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update workbook version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workbook"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of user",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "workbook_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_workbook.UpdateWorkBookVersionRequest"
                        }
                    },
                    {
                        "description": "json format",
                        "name": "version_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_workbook.UpdateWorkBookVersionRequest"
                        }
                    },
                    {
                        "description": "json format",
                        "name": "sql_content",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_workbook.UpdateWorkBookVersionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/errno.Result"
                        }
                    }
                }
            }
        },
        "/ws/query": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "executes the specified query coming from the websocket and retruns the result",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "unique id of user",
                        "name": "uid",
                        "in": "header"
                    },
                    {
                        "description": "json format",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_sqlquery.ExecuteQueryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/errno.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_sqlquery.ExecuteQueryResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "connector.CommonFileTaskConfig": {
            "type": "object",
            "properties": {
                "file_filter_config": {
                    "$ref": "#/definitions/connector.FileFilterConfig"
                },
                "load_mode_config": {
                    "$ref": "#/definitions/connector.LoadModeConfig"
                },
                "uris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "connector.Connector": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "dify": {
                    "$ref": "#/definitions/connector.DifyConfig"
                },
                "hdfs": {
                    "$ref": "#/definitions/connector.HdfsConfig"
                },
                "id": {
                    "type": "integer"
                },
                "mo": {
                    "$ref": "#/definitions/connector.MOConfig"
                },
                "name": {
                    "type": "string"
                },
                "oss": {
                    "$ref": "#/definitions/connector.OssConfig"
                },
                "related_task_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "s3": {
                    "$ref": "#/definitions/connector.S3Config"
                },
                "source_type": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "usage_type": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "connector.CreateConnectorReq": {
            "type": "object",
            "required": [
                "name",
                "source_type"
            ],
            "properties": {
                "dify": {
                    "$ref": "#/definitions/connector.DifyConfig"
                },
                "hdfs": {
                    "$ref": "#/definitions/connector.HdfsConfig"
                },
                "mo": {
                    "$ref": "#/definitions/connector.MOConfig"
                },
                "name": {
                    "type": "string"
                },
                "oss": {
                    "$ref": "#/definitions/connector.OssConfig"
                },
                "s3": {
                    "$ref": "#/definitions/connector.S3Config"
                },
                "source_type": {
                    "type": "integer"
                },
                "state": {
                    "description": "Baidu Netdisk need",
                    "type": "string"
                },
                "usage_type": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "connector.DifyConfig": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "api_url": {
                    "type": "string"
                }
            }
        },
        "connector.FileFilterConfig": {
            "type": "object",
            "properties": {
                "file_types": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "filename_globs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "max_create_time": {
                    "type": "integer"
                },
                "max_file_size": {
                    "type": "integer"
                },
                "min_create_time": {
                    "type": "integer"
                },
                "min_file_size": {
                    "type": "integer"
                }
            }
        },
        "connector.FileUploadResult": {
            "type": "object",
            "properties": {
                "file_id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "connector.HdfsConfig": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "HDFS地址，格式：\"172.21.107.12:8020\"",
                    "type": "string"
                },
                "auth_type": {
                    "description": "认证方式",
                    "type": "integer"
                },
                "file_path": {
                    "type": "string"
                },
                "kerberos_principal": {
                    "description": "Kerberos Principals，当auth_type为kerberos时使用",
                    "type": "string"
                },
                "keytab_content": {
                    "description": "Keytab文件内容",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "keytab_file": {
                    "description": "Keytab文件名,Keytab文件包含principal和加密密钥的文件，用于自动化认证",
                    "type": "string"
                },
                "krb5_conf_content": {
                    "description": "Kerberos配置文件内容",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "krb5_conf_file": {
                    "description": "Kerberos配置文件名, Kerberos配置文件用于指定 KDC 地址、realm 等信息",
                    "type": "string"
                },
                "proxy_user": {
                    "description": "代理用户",
                    "type": "string"
                },
                "username": {
                    "description": "当auth_type为Simple时不能为空， 为Kerberos可以为空,由Go代码验证",
                    "type": "string"
                }
            }
        },
        "connector.ListConnectorFileReq": {
            "type": "object",
            "required": [
                "connector_id"
            ],
            "properties": {
                "connector_id": {
                    "type": "integer"
                },
                "cursor": {
                    "type": "string"
                },
                "dir": {
                    "type": "string"
                },
                "file_types": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "limit": {
                    "type": "integer"
                }
            }
        },
        "connector.ListConnectorFileResp": {
            "type": "object",
            "properties": {
                "cursor": {
                    "type": "string"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/connector.SourceFile"
                    }
                },
                "has_more": {
                    "type": "boolean"
                }
            }
        },
        "connector.LoadModeConfig": {
            "type": "object",
            "properties": {
                "interval": {
                    "type": "integer"
                },
                "load_interval_type": {
                    "type": "integer"
                }
            }
        },
        "connector.MOConfig": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "connector.OssConfig": {
            "type": "object",
            "properties": {
                "access_key_id": {
                    "type": "string"
                },
                "access_key_secret": {
                    "type": "string"
                },
                "bucket_name": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                }
            }
        },
        "connector.QueryConnectorReq": {
            "type": "object",
            "properties": {
                "is_desc": {
                    "type": "boolean"
                },
                "keyword": {
                    "type": "string"
                },
                "order_by": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "source_type": {
                    "type": "integer"
                },
                "source_type_list": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "status": {
                    "type": "string"
                },
                "status_list": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "usage_type": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "connector.QueryConnectorResp": {
            "type": "object",
            "properties": {
                "connectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/connector.Connector"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "connector.S3Config": {
            "type": "object",
            "properties": {
                "access_key_id": {
                    "type": "string"
                },
                "access_key_secret": {
                    "type": "string"
                },
                "bucket_name": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                },
                "path_style": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                },
                "session_token": {
                    "type": "string"
                }
            }
        },
        "connector.SourceFile": {
            "type": "object",
            "properties": {
                "create_time": {
                    "type": "integer"
                },
                "filename": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "size": {
                    "description": "文件夹大小为0，文件大小为具体大小",
                    "type": "integer"
                },
                "type": {
                    "type": "integer"
                },
                "update_time": {
                    "type": "integer"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "connector.UpdateConnectorReq": {
            "type": "object",
            "properties": {
                "dify": {
                    "$ref": "#/definitions/connector.DifyConfig"
                },
                "hdfs": {
                    "$ref": "#/definitions/connector.HdfsConfig"
                },
                "mo": {
                    "$ref": "#/definitions/connector.MOConfig"
                },
                "name": {
                    "type": "string"
                },
                "oss": {
                    "$ref": "#/definitions/connector.OssConfig"
                },
                "s3": {
                    "$ref": "#/definitions/connector.S3Config"
                },
                "usage_type": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "connector.ValidateConnectorReq": {
            "type": "object",
            "required": [
                "source_type"
            ],
            "properties": {
                "connector_id": {
                    "type": "integer"
                },
                "dify": {
                    "$ref": "#/definitions/connector.DifyConfig"
                },
                "hdfs": {
                    "$ref": "#/definitions/connector.HdfsConfig"
                },
                "mo": {
                    "$ref": "#/definitions/connector.MOConfig"
                },
                "oss": {
                    "$ref": "#/definitions/connector.OssConfig"
                },
                "s3": {
                    "$ref": "#/definitions/connector.S3Config"
                },
                "source_type": {
                    "type": "integer"
                }
            }
        },
        "connector.ValidateConnectorResp": {
            "type": "object",
            "properties": {
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "errno.Result": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "error code",
                    "type": "string"
                },
                "data": {
                    "description": "data returned on success"
                },
                "msg": {
                    "description": "error description",
                    "type": "string"
                },
                "request_id": {
                    "description": "unique RequestID of the current request",
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_connector.CheckTableNameExistsReq": {
            "type": "object",
            "required": [
                "connector_id",
                "database",
                "table"
            ],
            "properties": {
                "connector_id": {
                    "type": "integer"
                },
                "database": {
                    "type": "string"
                },
                "table": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_connector.CheckTableNameExistsResp": {
            "type": "object",
            "properties": {
                "exists": {
                    "type": "boolean"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_connector.ConnectorSummaryResp": {
            "type": "object",
            "properties": {
                "baidu_netdisk": {
                    "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_connector.FileSummary"
                },
                "local_file": {
                    "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_connector.FileSummary"
                },
                "mocloud_summary": {
                    "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_connector.MocloudSummary"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_connector.FileSummary": {
            "type": "object",
            "properties": {
                "doc_data_size": {
                    "type": "integer"
                },
                "file_count": {
                    "type": "integer"
                },
                "image_data_size": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_connector.ListDatabaseTablesReq": {
            "type": "object",
            "required": [
                "connector_id",
                "database"
            ],
            "properties": {
                "connector_id": {
                    "type": "integer"
                },
                "database": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_connector.ListDatabaseTablesResp": {
            "type": "object",
            "properties": {
                "tables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_connector.ListDatabasesReq": {
            "type": "object",
            "required": [
                "connector_id"
            ],
            "properties": {
                "connector_id": {
                    "type": "integer"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_connector.ListDatabasesResp": {
            "type": "object",
            "properties": {
                "databases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_connector.MocloudSummary": {
            "type": "object",
            "properties": {
                "data_size": {
                    "type": "integer"
                },
                "table_count": {
                    "type": "integer"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_connector.TableColumnMappingReq": {
            "type": "object",
            "required": [
                "connector_id",
                "database",
                "export_columns",
                "table"
            ],
            "properties": {
                "connector_id": {
                    "type": "integer"
                },
                "database": {
                    "type": "string"
                },
                "export_columns": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "table": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_connector.TableColumnMappingResp": {
            "type": "object",
            "required": [
                "column_map",
                "need_mapping_columns"
            ],
            "properties": {
                "column_map": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "need_mapping_columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_connector.UploadFileResp": {
            "type": "object",
            "properties": {
                "file_id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/connector.FileUploadResult"
                    }
                },
                "success": {
                    "type": "boolean"
                },
                "task_id": {
                    "type": "integer"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_instance.Connection": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_instance.DescribeInstanceInfoResponse": {
            "type": "object",
            "properties": {
                "account_name": {
                    "type": "string"
                },
                "connections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_instance.Connection"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "db_count": {
                    "type": "integer"
                },
                "deleting_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "internalVersion": {
                    "description": "The internal version of the instance",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "network_policy": {
                    "$ref": "#/definitions/types.NetworkPolicy"
                },
                "organization": {
                    "type": "string"
                },
                "plan_type": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "provider_id": {
                    "description": "The Identifier for the different providers.\nFor AWS, it's the AWS account ID where the MO cluster is deployed",
                    "type": "string"
                },
                "quota": {
                    "$ref": "#/definitions/types.Quota"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "usage": {
                    "$ref": "#/definitions/types.Usage"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_load.LoadSampleDataResponse": {
            "type": "object",
            "properties": {
                "query_id": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_log.LogListRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rbac.CommonFilter"
                    }
                },
                "order": {
                    "type": "string",
                    "example": "desc"
                },
                "order_by": {
                    "type": "string",
                    "example": "create_time"
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_log.LogListResponse": {
            "type": "object",
            "properties": {
                "role_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_log.LogResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_log.LogResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "role_name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_meta.DbTableInfo": {
            "type": "object",
            "properties": {
                "tables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TableViewInfo"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_meta.DescribeDBTreeRequest": {
            "type": "object"
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_meta.DescribeDBTreeResponse": {
            "type": "object",
            "properties": {
                "db_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_meta.ListTableViewResponse"
                    }
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_meta.DescribeTableDDLRequest": {
            "type": "object",
            "required": [
                "db_name",
                "table_name"
            ],
            "properties": {
                "db_name": {
                    "type": "string"
                },
                "table_name": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_meta.DescribeTableDDLResponse": {
            "type": "object",
            "properties": {
                "create_sql": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_meta.DropDBRequest": {
            "type": "object",
            "required": [
                "db_name"
            ],
            "properties": {
                "db_name": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_meta.DropTableViewRequest": {
            "type": "object",
            "required": [
                "db_name",
                "table_name"
            ],
            "properties": {
                "db_name": {
                    "type": "string"
                },
                "table_name": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_meta.ListDatabaseRequest": {
            "type": "object"
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_meta.ListDatabaseResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DatabaseInfo"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_meta.ListTableColumnStatsResponse": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TableColumnStat"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_meta.ListTableColumnsRequest": {
            "type": "object",
            "required": [
                "db_name",
                "table_name"
            ],
            "properties": {
                "db_name": {
                    "type": "string"
                },
                "table_name": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_meta.ListTableColumnsResponse": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TableColumnInfo"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_meta.ListTableColumnsStatsRequest": {
            "type": "object",
            "required": [
                "db_name",
                "table_name"
            ],
            "properties": {
                "db_name": {
                    "type": "string"
                },
                "table_name": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_meta.ListTableInfoRequest": {
            "type": "object",
            "required": [
                "db_name",
                "table_name"
            ],
            "properties": {
                "db_name": {
                    "type": "string"
                },
                "table_name": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_meta.ListTableInfoResponse": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TableColumnInfo"
                    }
                },
                "rows": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_meta.ListTableViewRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_meta.ListTableViewResponse": {
            "type": "object",
            "properties": {
                "db_name": {
                    "type": "string"
                },
                "db_owner": {
                    "type": "string"
                },
                "has_published": {
                    "type": "boolean"
                },
                "is_internal": {
                    "type": "boolean"
                },
                "is_subscription": {
                    "type": "boolean"
                },
                "tables": {
                    "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_meta.DbTableInfo"
                },
                "views": {
                    "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_meta.DbTableInfo"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_origin_volume.CreateOriginVolumeReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_origin_volume.DeleteOriginVolumeFilesReq": {
            "type": "object",
            "properties": {
                "file_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "volume_id": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_origin_volume.DeleteOriginVolumeReq": {
            "type": "object",
            "properties": {
                "volume_id": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_origin_volume.DescribeOriginVolumeResp": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.File"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_origin_volume.DescribeOriginVolumesResp": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Volume"
                    }
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_origin_volume.GetFilePreviewLinkReq": {
            "type": "object",
            "required": [
                "file_id"
            ],
            "properties": {
                "file_id": {
                    "type": "string"
                },
                "volume_id": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_origin_volume.GetFilePreviewLinkResp": {
            "type": "object",
            "properties": {
                "link": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_origin_volume.GetOriginVolumeFileLinkReq": {
            "type": "object",
            "required": [
                "file_id"
            ],
            "properties": {
                "file_id": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_origin_volume.GetOriginVolumeFileLinkResp": {
            "type": "object",
            "properties": {
                "link": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_priv.PrivListRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rbac.CommonFilter"
                    }
                },
                "order": {
                    "type": "string",
                    "example": "desc"
                },
                "order_by": {
                    "type": "string",
                    "example": "create_time"
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_priv.PrivListResponse": {
            "type": "object",
            "properties": {
                "authority_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_priv.PrivResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_priv.PrivResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "obj_type": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_role.RoleCreateRequest": {
            "type": "object",
            "required": [
                "authority_code_list",
                "name"
            ],
            "properties": {
                "authority_code_list": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_role.RoleDeleteRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_role.RoleInfoRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_role.RoleListRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rbac.CommonFilter"
                    }
                },
                "order": {
                    "type": "string",
                    "example": "desc"
                },
                "order_by": {
                    "type": "string",
                    "example": "create_time"
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_role.RoleListResponse": {
            "type": "object",
            "properties": {
                "role_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_role.RoleResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_role.RoleResponse": {
            "type": "object",
            "properties": {
                "authority_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PrivResponse"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "reserved": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_role.RoleUpdateInfoRequest": {
            "type": "object",
            "required": [
                "authority_code_list",
                "id"
            ],
            "properties": {
                "authority_code_list": {
                    "description": "RoleName string        `json:\"name\" binding:\"required\"`",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_role.RoleUpdateStatusRequest": {
            "type": "object",
            "required": [
                "action",
                "id"
            ],
            "properties": {
                "action": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_sqlquery.DescribeQueryRequest": {
            "type": "object",
            "required": [
                "query_id"
            ],
            "properties": {
                "query_id": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_sqlquery.DescribeQueryResponse": {
            "type": "object",
            "properties": {
                "db_name": {
                    "description": "The name of the target database",
                    "type": "string"
                },
                "err_msg": {
                    "type": "string"
                },
                "statement_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_sqlquery.ExecuteQueryRequest": {
            "type": "object",
            "required": [
                "query"
            ],
            "properties": {
                "db_name": {
                    "description": "The name of the target database",
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "query": {
                    "type": "string"
                },
                "sql_type": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_sqlquery.ExecuteQueryResponse": {
            "type": "object",
            "properties": {
                "columns": {
                    "description": "The column info of the result",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/local_service.Column"
                    }
                },
                "db_name": {
                    "description": "The name of the current database",
                    "type": "string"
                },
                "empty_set": {
                    "description": "Non nil if the result set is not saved by MO,\ne.g. insert,update,delete SQLs, etc",
                    "$ref": "#/definitions/local_service.EmptySet"
                },
                "err_msg": {
                    "description": "The error message of the whole query execution process,\nit could be non-empty even if the query is successful,\ne.g. fail to get the query result",
                    "type": "string"
                },
                "limit": {
                    "description": "The limit in the request",
                    "type": "integer"
                },
                "offset": {
                    "description": "The offset in the request",
                    "type": "integer"
                },
                "query_id": {
                    "description": "An internal query ID to identify a query",
                    "type": "string"
                },
                "result": {
                    "description": "The result set of the query",
                    "type": "array",
                    "items": {}
                },
                "statement_id": {
                    "description": "The statement ID of the query",
                    "type": "string"
                },
                "status": {
                    "description": "The status of the query",
                    "type": "string"
                },
                "total": {
                    "description": "The total number of rows in the result set",
                    "type": "integer"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_sqlquery.KillQueryRequest": {
            "type": "object",
            "required": [
                "query_id"
            ],
            "properties": {
                "query_id": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_task.CreateTaskReq": {
            "type": "object",
            "required": [
                "config_type",
                "source_config",
                "source_connector_id",
                "volume_id"
            ],
            "properties": {
                "config_type": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "source_config": {
                    "$ref": "#/definitions/types.TaskSourceConfig"
                },
                "source_connector_id": {
                    "type": "integer"
                },
                "volume_id": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_task.DeleteTaskReq": {
            "type": "object",
            "required": [
                "task_id"
            ],
            "properties": {
                "task_id": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_task.GetTaskReq": {
            "type": "object",
            "required": [
                "task_id"
            ],
            "properties": {
                "task_id": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_task.GetTaskResp": {
            "type": "object",
            "properties": {
                "task": {
                    "$ref": "#/definitions/types.Task"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_task.ListTaskFilesReq": {
            "type": "object",
            "required": [
                "task_id"
            ],
            "properties": {
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "status": {
                    "description": "状态过滤",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "task_id": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_task.ListTaskFilesResp": {
            "type": "object",
            "properties": {
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.File"
                    }
                },
                "total": {
                    "type": "integer"
                },
                "total_failed": {
                    "type": "integer"
                },
                "total_success": {
                    "type": "integer"
                },
                "total_sum": {
                    "type": "integer"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_task.ListTaskReq": {
            "type": "object",
            "properties": {
                "connector_sources": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "file_filter_modes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "interval_types": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "is_desc": {
                    "type": "boolean"
                },
                "keyword": {
                    "description": "搜索创建人和目标位置",
                    "type": "string"
                },
                "order_by": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "source_connector_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "status": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_task.ListTaskResp": {
            "type": "object",
            "properties": {
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Task"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_task.PauseTaskReq": {
            "type": "object",
            "required": [
                "task_id"
            ],
            "properties": {
                "task_id": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_task.ResumeTaskReq": {
            "type": "object",
            "required": [
                "task_id"
            ],
            "properties": {
                "task_id": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_task.RetryTaskReq": {
            "type": "object",
            "required": [
                "ids",
                "task_id"
            ],
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "task_id": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_task.UpdateTaskReq": {
            "type": "object",
            "required": [
                "task_id"
            ],
            "properties": {
                "file_filter_config": {
                    "$ref": "#/definitions/connector.FileFilterConfig"
                },
                "load_mode_config": {
                    "$ref": "#/definitions/connector.LoadModeConfig"
                },
                "task_id": {
                    "type": "string"
                },
                "uris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_user.ApiKeyResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_user.ContactUSRequest": {
            "type": "object",
            "required": [
                "content",
                "request_type"
            ],
            "properties": {
                "content": {
                    "type": "string",
                    "example": "us-west-2"
                },
                "request_type": {
                    "type": "string",
                    "example": "region"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_user.DeleteUserRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_user.DescribeUserInfoResponse": {
            "type": "object",
            "properties": {
                "authority_code_list": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "disable_search": {
                    "description": "Disable search in frontend",
                    "type": "boolean"
                },
                "is_admin": {
                    "description": "Used For MOI",
                    "type": "boolean"
                },
                "role": {
                    "description": "e.g. accountadmin",
                    "type": "string"
                },
                "user": {
                    "description": "e.g. admin",
                    "type": "string"
                },
                "user_info": {
                    "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_user.UserResponse"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_user.MeUpdateInfoRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "admin"
                },
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_user.MeUpdatePasswordRequest": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "pwd123"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_user.UpdateInfoRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "admin"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "example": 3
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_user.UpdatePasswordRequest": {
            "type": "object",
            "required": [
                "id",
                "password"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 3
                },
                "password": {
                    "type": "string",
                    "example": "pwd123"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_user.UpdateRoleListRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 2
                },
                "role_id_list": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_user.UpdateUserStatusRequest": {
            "type": "object",
            "required": [
                "action",
                "id"
            ],
            "properties": {
                "action": {
                    "description": "enable or disabled",
                    "type": "string",
                    "example": "enable"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_user.UserCreateRequest": {
            "type": "object",
            "required": [
                "name",
                "password",
                "role_id_list"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "admin"
                },
                "email": {
                    "type": "string",
                    "example": "aa@bb.com"
                },
                "name": {
                    "type": "string",
                    "example": "admin"
                },
                "password": {
                    "type": "string",
                    "example": "admin"
                },
                "phone": {
                    "type": "string",
                    "example": "12345678901"
                },
                "role_id_list": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1
                    ]
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_user.UserDetailInfoRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_user.UserDetailInfoResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_login": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "reserved": {
                    "type": "boolean"
                },
                "role_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RoleIDName"
                    }
                },
                "status": {
                    "type": "string",
                    "example": "enable"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_user.UserListRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rbac.CommonFilter"
                    }
                },
                "order": {
                    "type": "string",
                    "example": "desc"
                },
                "order_by": {
                    "type": "string",
                    "example": "create_time"
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_user.UserListResponse": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer"
                },
                "user_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_user.UserResponse"
                    }
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_user.UserResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_login": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "reserved": {
                    "type": "boolean"
                },
                "role_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RoleIDName"
                    }
                },
                "status": {
                    "type": "string",
                    "example": "enable"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_workbook.CreateWorkBookRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_workbook.CreateWorkBookVersionRequest": {
            "type": "object",
            "required": [
                "workbook_id"
            ],
            "properties": {
                "sql_content": {
                    "type": "string"
                },
                "workbook_id": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_workbook.DeleteWorkBookRequest": {
            "type": "object",
            "required": [
                "workbook_id"
            ],
            "properties": {
                "workbook_id": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_workbook.GetWorkBookVersionDetailRequest": {
            "type": "object",
            "required": [
                "version_id",
                "workbook_id"
            ],
            "properties": {
                "version_id": {
                    "type": "string"
                },
                "workbook_id": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_workbook.ListWorkBookRequest": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "offset": {
                    "type": "integer"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_workbook.ListWorkBookVersionRequest": {
            "type": "object",
            "required": [
                "workbook_id"
            ],
            "properties": {
                "workbook_id": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_workbook.SaveWorkBookRequest": {
            "type": "object",
            "required": [
                "version_id",
                "workbook_id"
            ],
            "properties": {
                "sql_content": {
                    "type": "string"
                },
                "version_id": {
                    "type": "string"
                },
                "workbook_id": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_workbook.UpdateWorkBookRequest": {
            "type": "object",
            "required": [
                "name",
                "workbook_id"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "workbook_id": {
                    "type": "string"
                }
            }
        },
        "github.com_matrixone-cloud_mocloud-services_src_local-service_pkg_handlers_workbook.UpdateWorkBookVersionRequest": {
            "type": "object",
            "required": [
                "version_id",
                "workbook_id"
            ],
            "properties": {
                "sql_content": {
                    "type": "string"
                },
                "version_id": {
                    "type": "string"
                },
                "workbook_id": {
                    "type": "string"
                }
            }
        },
        "local_service.Column": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "local_service.Cost": {
            "type": "object",
            "properties": {
                "card": {
                    "type": "number"
                },
                "ndv": {
                    "type": "number"
                },
                "rowsize": {
                    "type": "number"
                },
                "start": {
                    "type": "number"
                },
                "total": {
                    "type": "number"
                }
            }
        },
        "local_service.DescribeQueryDetailRequest": {
            "type": "object",
            "required": [
                "statement_id"
            ],
            "properties": {
                "account": {
                    "description": "only use in server internal mode",
                    "type": "string"
                },
                "end": {
                    "type": "string"
                },
                "query_all_field": {
                    "type": "boolean"
                },
                "start": {
                    "type": "string"
                },
                "statement_id": {
                    "type": "string"
                }
            }
        },
        "local_service.DescribeQueryHistoryRequest": {
            "type": "object",
            "properties": {
                "account": {
                    "description": "only use in server internal mode",
                    "type": "string"
                },
                "cu": {
                    "description": "The filter value for cu",
                    "type": "integer"
                },
                "databases": {
                    "description": "The names of databases of sql statements\nExample: [\"ssb\",\"system\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "duration": {
                    "type": "integer"
                },
                "end": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "order": {
                    "type": "string"
                },
                "order_by": {
                    "description": "Order columns\nValid value: request_at response_at duration rows_read bytes_scan cu, default is [\"request_at\"]\nExample: [\"request_at\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "query_type": {
                    "description": "Query type\nValid value: DQL, DDL, DML, DCL, TCL, Other\nExample: [\"DQL\",\"DML\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "selected_field": {
                    "description": "Required column names\nValid value: statement_id transaction_id session_id account user host database statement statement_tag statement_fingerprint node_uuid node_type request_at response_at duration status err_code error exec_plan rows_read bytes_scan cpu memory io statement_type query_type role_id sql_source_type result_count cu\"\nExample: [\"statement_id\",\"account\",\"statement\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "session_id": {
                    "type": "string"
                },
                "sql_source_type": {
                    "description": "Sql statement source type\nValid value: internal_sql cloud_user_sql cloud_nouser_sql external_sql __++__internal_cmd_field_list\nExample: [\"internal_sql\",\"cloud_user_sql\",\"external_sql\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "start": {
                    "type": "string"
                },
                "statement": {
                    "description": "The Keywords of sql statement\nExample: \"join\"",
                    "type": "string"
                },
                "statement_id": {
                    "type": "string"
                },
                "status": {
                    "description": "The running status of sql statement\nValid value: Running, Success, Failed\nExample: Success",
                    "type": "string",
                    "enum": [
                        "Running",
                        "Success",
                        "Failed"
                    ]
                },
                "transaction_id": {
                    "type": "string"
                },
                "user": {
                    "description": "The user name of who initiated the request\nExample: root",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "local_service.DescribeQueryHistoryResponse": {
            "type": "object",
            "properties": {
                "end": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "query_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/statement_info.StatementInfo"
                    }
                },
                "start": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "local_service.DescribeQueryProfileRequest": {
            "type": "object",
            "required": [
                "statement_id"
            ],
            "properties": {
                "account": {
                    "description": "only use in server internal mode",
                    "type": "string"
                },
                "end": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                },
                "statement_id": {
                    "type": "string"
                }
            }
        },
        "local_service.DescribeQueryProfileResponse": {
            "type": "object",
            "properties": {
                "profile": {
                    "$ref": "#/definitions/local_service.ExplainData"
                },
                "statement_id": {
                    "type": "string"
                }
            }
        },
        "local_service.DescribeQueryResultRequest": {
            "type": "object",
            "required": [
                "statement_id"
            ],
            "properties": {
                "account": {
                    "description": "only use in server internal mode",
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer",
                    "minimum": 0
                },
                "statement_id": {
                    "type": "string"
                }
            }
        },
        "local_service.DescribeQueryResultResponse": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/local_service.Column"
                    }
                },
                "empty_set": {
                    "$ref": "#/definitions/local_service.EmptySet"
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "result": {
                    "type": "array",
                    "items": {}
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "local_service.DownloadQueryResultRequest": {
            "type": "object",
            "required": [
                "statement_id"
            ],
            "properties": {
                "account": {
                    "description": "only use in server internal mode",
                    "type": "string"
                },
                "statement_id": {
                    "type": "string"
                }
            }
        },
        "local_service.DownloadQueryResultResponse": {
            "type": "object",
            "properties": {
                "link": {
                    "type": "string"
                }
            }
        },
        "local_service.Edge": {
            "type": "object",
            "properties": {
                "dst": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "output": {
                    "type": "integer"
                },
                "src": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "local_service.EmptySet": {
            "type": "object",
            "properties": {
                "msg": {
                    "type": "string"
                }
            }
        },
        "local_service.ExplainData": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/local_service.Step"
                    }
                },
                "success": {
                    "type": "boolean"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "local_service.Global": {
            "type": "object",
            "properties": {
                "statistics": {
                    "$ref": "#/definitions/local_service.Statistics"
                },
                "totalStats": {
                    "$ref": "#/definitions/local_service.TotalStats"
                }
            }
        },
        "local_service.GraphData": {
            "type": "object",
            "properties": {
                "edges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/local_service.Edge"
                    }
                },
                "global": {
                    "$ref": "#/definitions/local_service.Global"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/local_service.Label"
                    }
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/local_service.Node"
                    }
                }
            }
        },
        "local_service.Label": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "local_service.Node": {
            "type": "object",
            "properties": {
                "cost": {
                    "$ref": "#/definitions/local_service.Cost"
                },
                "id": {
                    "type": "string"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/local_service.Label"
                    }
                },
                "name": {
                    "type": "string"
                },
                "statistics": {
                    "$ref": "#/definitions/local_service.Statistics"
                },
                "title": {
                    "type": "string"
                },
                "totalStats": {
                    "$ref": "#/definitions/local_service.TotalStats"
                }
            }
        },
        "local_service.StatisticValue": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "local_service.Statistics": {
            "type": "object",
            "properties": {
                "io": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/local_service.StatisticValue"
                    }
                },
                "memory": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/local_service.StatisticValue"
                    }
                },
                "network": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/local_service.StatisticValue"
                    }
                },
                "throughput": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/local_service.StatisticValue"
                    }
                }
            }
        },
        "local_service.Stats": {
            "type": "object"
        },
        "local_service.Step": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "graphData": {
                    "$ref": "#/definitions/local_service.GraphData"
                },
                "state": {
                    "type": "string"
                },
                "stats": {
                    "$ref": "#/definitions/local_service.Stats"
                },
                "step": {
                    "type": "integer"
                }
            }
        },
        "local_service.TotalStats": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "metric.MetricReq": {
            "type": "object",
            "properties": {
                "agg": {
                    "description": "聚合类型",
                    "type": "string"
                },
                "expr": {
                    "description": "表达式",
                    "type": "string"
                },
                "filters": {
                    "description": "指标过滤条件",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/metric.MetricReqFilter"
                    }
                },
                "name": {
                    "description": "需要查询的指标名称（需要包含聚合、group 计算的语意）",
                    "type": "string"
                }
            }
        },
        "metric.MetricReqFilter": {
            "type": "object",
            "properties": {
                "filterKey": {
                    "description": "过滤条件的 key，如果 key 相同返回逻辑或的结果",
                    "type": "string"
                },
                "filterValue": {
                    "type": "string"
                }
            }
        },
        "metric.OBMetricQueryReq": {
            "type": "object",
            "properties": {
                "account": {
                    "description": "可选：租户 ID",
                    "type": "string"
                },
                "end": {
                    "description": "结束时间",
                    "type": "string"
                },
                "interval": {
                    "description": "数据聚合时间",
                    "type": "integer"
                },
                "metrics": {
                    "description": "待查指标集合",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/metric.MetricReq"
                    }
                },
                "start": {
                    "description": "起始时间",
                    "type": "string"
                },
                "step": {
                    "description": "返回数据步长",
                    "type": "integer"
                }
            }
        },
        "models.DatabaseInfo": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "has_published": {
                    "type": "boolean"
                },
                "is_internal": {
                    "type": "boolean"
                },
                "is_subscription": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "tables": {
                    "type": "integer"
                }
            }
        },
        "models.PrivResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.RoleIDName": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.TableColumnInfo": {
            "type": "object",
            "properties": {
                "data_type": {
                    "type": "string"
                },
                "default_value": {
                    "type": "string"
                },
                "key_type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nullable": {
                    "type": "string"
                }
            }
        },
        "models.TableColumnStat": {
            "type": "object",
            "properties": {
                "data_type": {
                    "type": "string"
                },
                "maximum": {
                    "type": "string"
                },
                "minimum": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.TableViewInfo": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "rows": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "pkg_handlers_connector.CheckTableNameExistsReq": {
            "type": "object",
            "required": [
                "connector_id",
                "database",
                "table"
            ],
            "properties": {
                "connector_id": {
                    "type": "integer"
                },
                "database": {
                    "type": "string"
                },
                "table": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_connector.CheckTableNameExistsResp": {
            "type": "object",
            "properties": {
                "exists": {
                    "type": "boolean"
                }
            }
        },
        "pkg_handlers_connector.ConnectorSummaryResp": {
            "type": "object",
            "properties": {
                "baidu_netdisk": {
                    "$ref": "#/definitions/pkg_handlers_connector.FileSummary"
                },
                "local_file": {
                    "$ref": "#/definitions/pkg_handlers_connector.FileSummary"
                },
                "mocloud_summary": {
                    "$ref": "#/definitions/pkg_handlers_connector.MocloudSummary"
                }
            }
        },
        "pkg_handlers_connector.FileSummary": {
            "type": "object",
            "properties": {
                "doc_data_size": {
                    "type": "integer"
                },
                "file_count": {
                    "type": "integer"
                },
                "image_data_size": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "pkg_handlers_connector.ListDatabaseTablesReq": {
            "type": "object",
            "required": [
                "connector_id",
                "database"
            ],
            "properties": {
                "connector_id": {
                    "type": "integer"
                },
                "database": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_connector.ListDatabaseTablesResp": {
            "type": "object",
            "properties": {
                "tables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "pkg_handlers_connector.ListDatabasesReq": {
            "type": "object",
            "required": [
                "connector_id"
            ],
            "properties": {
                "connector_id": {
                    "type": "integer"
                }
            }
        },
        "pkg_handlers_connector.ListDatabasesResp": {
            "type": "object",
            "properties": {
                "databases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "pkg_handlers_connector.MocloudSummary": {
            "type": "object",
            "properties": {
                "data_size": {
                    "type": "integer"
                },
                "table_count": {
                    "type": "integer"
                }
            }
        },
        "pkg_handlers_connector.TableColumnMappingReq": {
            "type": "object",
            "required": [
                "connector_id",
                "database",
                "export_columns",
                "table"
            ],
            "properties": {
                "connector_id": {
                    "type": "integer"
                },
                "database": {
                    "type": "string"
                },
                "export_columns": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "table": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_connector.TableColumnMappingResp": {
            "type": "object",
            "required": [
                "column_map",
                "need_mapping_columns"
            ],
            "properties": {
                "column_map": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "need_mapping_columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "pkg_handlers_connector.UploadFileResp": {
            "type": "object",
            "properties": {
                "file_id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/connector.FileUploadResult"
                    }
                },
                "success": {
                    "type": "boolean"
                },
                "task_id": {
                    "type": "integer"
                }
            }
        },
        "pkg_handlers_instance.Connection": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_instance.DescribeInstanceInfoResponse": {
            "type": "object",
            "properties": {
                "account_name": {
                    "type": "string"
                },
                "connections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg_handlers_instance.Connection"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "db_count": {
                    "type": "integer"
                },
                "deleting_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "internalVersion": {
                    "description": "The internal version of the instance",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "network_policy": {
                    "$ref": "#/definitions/types.NetworkPolicy"
                },
                "organization": {
                    "type": "string"
                },
                "plan_type": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "provider_id": {
                    "description": "The Identifier for the different providers.\nFor AWS, it's the AWS account ID where the MO cluster is deployed",
                    "type": "string"
                },
                "quota": {
                    "$ref": "#/definitions/types.Quota"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "usage": {
                    "$ref": "#/definitions/types.Usage"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_load.LoadSampleDataResponse": {
            "type": "object",
            "properties": {
                "query_id": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_log.LogListRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rbac.CommonFilter"
                    }
                },
                "order": {
                    "type": "string",
                    "example": "desc"
                },
                "order_by": {
                    "type": "string",
                    "example": "create_time"
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "pkg_handlers_log.LogListResponse": {
            "type": "object",
            "properties": {
                "role_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg_handlers_log.LogResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "pkg_handlers_log.LogResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "role_name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_meta.DbTableInfo": {
            "type": "object",
            "properties": {
                "tables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TableViewInfo"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "pkg_handlers_meta.DescribeDBTreeRequest": {
            "type": "object"
        },
        "pkg_handlers_meta.DescribeDBTreeResponse": {
            "type": "object",
            "properties": {
                "db_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg_handlers_meta.ListTableViewResponse"
                    }
                }
            }
        },
        "pkg_handlers_meta.DescribeTableDDLRequest": {
            "type": "object",
            "required": [
                "db_name",
                "table_name"
            ],
            "properties": {
                "db_name": {
                    "type": "string"
                },
                "table_name": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_meta.DescribeTableDDLResponse": {
            "type": "object",
            "properties": {
                "create_sql": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_meta.DropDBRequest": {
            "type": "object",
            "required": [
                "db_name"
            ],
            "properties": {
                "db_name": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_meta.DropTableViewRequest": {
            "type": "object",
            "required": [
                "db_name",
                "table_name"
            ],
            "properties": {
                "db_name": {
                    "type": "string"
                },
                "table_name": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_meta.ListDatabaseRequest": {
            "type": "object"
        },
        "pkg_handlers_meta.ListDatabaseResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DatabaseInfo"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "pkg_handlers_meta.ListTableColumnStatsResponse": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TableColumnStat"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "pkg_handlers_meta.ListTableColumnsRequest": {
            "type": "object",
            "required": [
                "db_name",
                "table_name"
            ],
            "properties": {
                "db_name": {
                    "type": "string"
                },
                "table_name": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_meta.ListTableColumnsResponse": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TableColumnInfo"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "pkg_handlers_meta.ListTableColumnsStatsRequest": {
            "type": "object",
            "required": [
                "db_name",
                "table_name"
            ],
            "properties": {
                "db_name": {
                    "type": "string"
                },
                "table_name": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_meta.ListTableInfoRequest": {
            "type": "object",
            "required": [
                "db_name",
                "table_name"
            ],
            "properties": {
                "db_name": {
                    "type": "string"
                },
                "table_name": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_meta.ListTableInfoResponse": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TableColumnInfo"
                    }
                },
                "rows": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "pkg_handlers_meta.ListTableViewRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_meta.ListTableViewResponse": {
            "type": "object",
            "properties": {
                "db_name": {
                    "type": "string"
                },
                "db_owner": {
                    "type": "string"
                },
                "has_published": {
                    "type": "boolean"
                },
                "is_internal": {
                    "type": "boolean"
                },
                "is_subscription": {
                    "type": "boolean"
                },
                "tables": {
                    "$ref": "#/definitions/pkg_handlers_meta.DbTableInfo"
                },
                "views": {
                    "$ref": "#/definitions/pkg_handlers_meta.DbTableInfo"
                }
            }
        },
        "pkg_handlers_origin_volume.CreateOriginVolumeReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_origin_volume.DeleteOriginVolumeFilesReq": {
            "type": "object",
            "properties": {
                "file_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "volume_id": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_origin_volume.DeleteOriginVolumeReq": {
            "type": "object",
            "properties": {
                "volume_id": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_origin_volume.DescribeOriginVolumeResp": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.File"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "pkg_handlers_origin_volume.DescribeOriginVolumesResp": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Volume"
                    }
                }
            }
        },
        "pkg_handlers_origin_volume.GetFilePreviewLinkReq": {
            "type": "object",
            "required": [
                "file_id"
            ],
            "properties": {
                "file_id": {
                    "type": "string"
                },
                "volume_id": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_origin_volume.GetFilePreviewLinkResp": {
            "type": "object",
            "properties": {
                "link": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_origin_volume.GetOriginVolumeFileLinkReq": {
            "type": "object",
            "required": [
                "file_id"
            ],
            "properties": {
                "file_id": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_origin_volume.GetOriginVolumeFileLinkResp": {
            "type": "object",
            "properties": {
                "link": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_priv.PrivListRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rbac.CommonFilter"
                    }
                },
                "order": {
                    "type": "string",
                    "example": "desc"
                },
                "order_by": {
                    "type": "string",
                    "example": "create_time"
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "pkg_handlers_priv.PrivListResponse": {
            "type": "object",
            "properties": {
                "authority_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg_handlers_priv.PrivResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "pkg_handlers_priv.PrivResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "obj_type": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_role.RoleCreateRequest": {
            "type": "object",
            "required": [
                "authority_code_list",
                "name"
            ],
            "properties": {
                "authority_code_list": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_role.RoleDeleteRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "pkg_handlers_role.RoleInfoRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "pkg_handlers_role.RoleListRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rbac.CommonFilter"
                    }
                },
                "order": {
                    "type": "string",
                    "example": "desc"
                },
                "order_by": {
                    "type": "string",
                    "example": "create_time"
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "pkg_handlers_role.RoleListResponse": {
            "type": "object",
            "properties": {
                "role_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg_handlers_role.RoleResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "pkg_handlers_role.RoleResponse": {
            "type": "object",
            "properties": {
                "authority_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PrivResponse"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "reserved": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_role.RoleUpdateInfoRequest": {
            "type": "object",
            "required": [
                "authority_code_list",
                "id"
            ],
            "properties": {
                "authority_code_list": {
                    "description": "RoleName string        `json:\"name\" binding:\"required\"`",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "pkg_handlers_role.RoleUpdateStatusRequest": {
            "type": "object",
            "required": [
                "action",
                "id"
            ],
            "properties": {
                "action": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "pkg_handlers_sqlquery.DescribeQueryRequest": {
            "type": "object",
            "required": [
                "query_id"
            ],
            "properties": {
                "query_id": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_sqlquery.DescribeQueryResponse": {
            "type": "object",
            "properties": {
                "db_name": {
                    "description": "The name of the target database",
                    "type": "string"
                },
                "err_msg": {
                    "type": "string"
                },
                "statement_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_sqlquery.ExecuteQueryRequest": {
            "type": "object",
            "required": [
                "query"
            ],
            "properties": {
                "db_name": {
                    "description": "The name of the target database",
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "query": {
                    "type": "string"
                },
                "sql_type": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_sqlquery.ExecuteQueryResponse": {
            "type": "object",
            "properties": {
                "columns": {
                    "description": "The column info of the result",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/local_service.Column"
                    }
                },
                "db_name": {
                    "description": "The name of the current database",
                    "type": "string"
                },
                "empty_set": {
                    "description": "Non nil if the result set is not saved by MO,\ne.g. insert,update,delete SQLs, etc",
                    "$ref": "#/definitions/local_service.EmptySet"
                },
                "err_msg": {
                    "description": "The error message of the whole query execution process,\nit could be non-empty even if the query is successful,\ne.g. fail to get the query result",
                    "type": "string"
                },
                "limit": {
                    "description": "The limit in the request",
                    "type": "integer"
                },
                "offset": {
                    "description": "The offset in the request",
                    "type": "integer"
                },
                "query_id": {
                    "description": "An internal query ID to identify a query",
                    "type": "string"
                },
                "result": {
                    "description": "The result set of the query",
                    "type": "array",
                    "items": {}
                },
                "statement_id": {
                    "description": "The statement ID of the query",
                    "type": "string"
                },
                "status": {
                    "description": "The status of the query",
                    "type": "string"
                },
                "total": {
                    "description": "The total number of rows in the result set",
                    "type": "integer"
                }
            }
        },
        "pkg_handlers_sqlquery.KillQueryRequest": {
            "type": "object",
            "required": [
                "query_id"
            ],
            "properties": {
                "query_id": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_task.CreateTaskReq": {
            "type": "object",
            "required": [
                "config_type",
                "source_config",
                "source_connector_id",
                "volume_id"
            ],
            "properties": {
                "config_type": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "source_config": {
                    "$ref": "#/definitions/types.TaskSourceConfig"
                },
                "source_connector_id": {
                    "type": "integer"
                },
                "volume_id": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_task.DeleteTaskReq": {
            "type": "object",
            "required": [
                "task_id"
            ],
            "properties": {
                "task_id": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_task.GetTaskReq": {
            "type": "object",
            "required": [
                "task_id"
            ],
            "properties": {
                "task_id": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_task.GetTaskResp": {
            "type": "object",
            "properties": {
                "task": {
                    "$ref": "#/definitions/types.Task"
                }
            }
        },
        "pkg_handlers_task.ListTaskFilesReq": {
            "type": "object",
            "required": [
                "task_id"
            ],
            "properties": {
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "status": {
                    "description": "状态过滤",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "task_id": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_task.ListTaskFilesResp": {
            "type": "object",
            "properties": {
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.File"
                    }
                },
                "total": {
                    "type": "integer"
                },
                "total_failed": {
                    "type": "integer"
                },
                "total_success": {
                    "type": "integer"
                },
                "total_sum": {
                    "type": "integer"
                }
            }
        },
        "pkg_handlers_task.ListTaskReq": {
            "type": "object",
            "properties": {
                "connector_sources": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "file_filter_modes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "interval_types": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "is_desc": {
                    "type": "boolean"
                },
                "keyword": {
                    "description": "搜索创建人和目标位置",
                    "type": "string"
                },
                "order_by": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "source_connector_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "status": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "pkg_handlers_task.ListTaskResp": {
            "type": "object",
            "properties": {
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Task"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "pkg_handlers_task.PauseTaskReq": {
            "type": "object",
            "required": [
                "task_id"
            ],
            "properties": {
                "task_id": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_task.ResumeTaskReq": {
            "type": "object",
            "required": [
                "task_id"
            ],
            "properties": {
                "task_id": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_task.RetryTaskReq": {
            "type": "object",
            "required": [
                "ids",
                "task_id"
            ],
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "task_id": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_task.UpdateTaskReq": {
            "type": "object",
            "required": [
                "task_id"
            ],
            "properties": {
                "file_filter_config": {
                    "$ref": "#/definitions/connector.FileFilterConfig"
                },
                "load_mode_config": {
                    "$ref": "#/definitions/connector.LoadModeConfig"
                },
                "task_id": {
                    "type": "string"
                },
                "uris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "pkg_handlers_user.ApiKeyResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_user.ContactUSRequest": {
            "type": "object",
            "required": [
                "content",
                "request_type"
            ],
            "properties": {
                "content": {
                    "type": "string",
                    "example": "us-west-2"
                },
                "request_type": {
                    "type": "string",
                    "example": "region"
                }
            }
        },
        "pkg_handlers_user.DeleteUserRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "pkg_handlers_user.DescribeUserInfoResponse": {
            "type": "object",
            "properties": {
                "authority_code_list": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "disable_search": {
                    "description": "Disable search in frontend",
                    "type": "boolean"
                },
                "is_admin": {
                    "description": "Used For MOI",
                    "type": "boolean"
                },
                "role": {
                    "description": "e.g. accountadmin",
                    "type": "string"
                },
                "user": {
                    "description": "e.g. admin",
                    "type": "string"
                },
                "user_info": {
                    "$ref": "#/definitions/pkg_handlers_user.UserResponse"
                }
            }
        },
        "pkg_handlers_user.MeUpdateInfoRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "admin"
                },
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_user.MeUpdatePasswordRequest": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "pwd123"
                }
            }
        },
        "pkg_handlers_user.UpdateInfoRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "admin"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "example": 3
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_user.UpdatePasswordRequest": {
            "type": "object",
            "required": [
                "id",
                "password"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 3
                },
                "password": {
                    "type": "string",
                    "example": "pwd123"
                }
            }
        },
        "pkg_handlers_user.UpdateRoleListRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 2
                },
                "role_id_list": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "pkg_handlers_user.UpdateUserStatusRequest": {
            "type": "object",
            "required": [
                "action",
                "id"
            ],
            "properties": {
                "action": {
                    "description": "enable or disabled",
                    "type": "string",
                    "example": "enable"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "pkg_handlers_user.UserCreateRequest": {
            "type": "object",
            "required": [
                "name",
                "password",
                "role_id_list"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "admin"
                },
                "email": {
                    "type": "string",
                    "example": "aa@bb.com"
                },
                "name": {
                    "type": "string",
                    "example": "admin"
                },
                "password": {
                    "type": "string",
                    "example": "admin"
                },
                "phone": {
                    "type": "string",
                    "example": "12345678901"
                },
                "role_id_list": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1
                    ]
                }
            }
        },
        "pkg_handlers_user.UserDetailInfoRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "pkg_handlers_user.UserDetailInfoResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_login": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "reserved": {
                    "type": "boolean"
                },
                "role_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RoleIDName"
                    }
                },
                "status": {
                    "type": "string",
                    "example": "enable"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_user.UserListRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rbac.CommonFilter"
                    }
                },
                "order": {
                    "type": "string",
                    "example": "desc"
                },
                "order_by": {
                    "type": "string",
                    "example": "create_time"
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "pkg_handlers_user.UserListResponse": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer"
                },
                "user_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg_handlers_user.UserResponse"
                    }
                }
            }
        },
        "pkg_handlers_user.UserResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_login": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "reserved": {
                    "type": "boolean"
                },
                "role_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RoleIDName"
                    }
                },
                "status": {
                    "type": "string",
                    "example": "enable"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_workbook.CreateWorkBookRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_workbook.CreateWorkBookVersionRequest": {
            "type": "object",
            "required": [
                "workbook_id"
            ],
            "properties": {
                "sql_content": {
                    "type": "string"
                },
                "workbook_id": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_workbook.DeleteWorkBookRequest": {
            "type": "object",
            "required": [
                "workbook_id"
            ],
            "properties": {
                "workbook_id": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_workbook.GetWorkBookVersionDetailRequest": {
            "type": "object",
            "required": [
                "version_id",
                "workbook_id"
            ],
            "properties": {
                "version_id": {
                    "type": "string"
                },
                "workbook_id": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_workbook.ListWorkBookRequest": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "offset": {
                    "type": "integer"
                }
            }
        },
        "pkg_handlers_workbook.ListWorkBookVersionRequest": {
            "type": "object",
            "required": [
                "workbook_id"
            ],
            "properties": {
                "workbook_id": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_workbook.SaveWorkBookRequest": {
            "type": "object",
            "required": [
                "version_id",
                "workbook_id"
            ],
            "properties": {
                "sql_content": {
                    "type": "string"
                },
                "version_id": {
                    "type": "string"
                },
                "workbook_id": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_workbook.UpdateWorkBookRequest": {
            "type": "object",
            "required": [
                "name",
                "workbook_id"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "workbook_id": {
                    "type": "string"
                }
            }
        },
        "pkg_handlers_workbook.UpdateWorkBookVersionRequest": {
            "type": "object",
            "required": [
                "version_id",
                "workbook_id"
            ],
            "properties": {
                "sql_content": {
                    "type": "string"
                },
                "version_id": {
                    "type": "string"
                },
                "workbook_id": {
                    "type": "string"
                }
            }
        },
        "rbac.CommonFilter": {
            "type": "object",
            "properties": {
                "fuzzy": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "statement_info.StatementInfo": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "bytes_scan": {
                    "type": "integer"
                },
                "cu": {
                    "type": "number"
                },
                "database": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "error_code": {
                    "type": "string"
                },
                "exec_plan": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "node_type": {
                    "type": "string"
                },
                "node_uuid": {
                    "type": "string"
                },
                "query_type": {
                    "type": "string"
                },
                "request_at": {
                    "type": "string"
                },
                "response_at": {
                    "type": "string"
                },
                "result_count": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "integer"
                },
                "rows_read": {
                    "type": "integer"
                },
                "session_id": {
                    "type": "string"
                },
                "sql_source_type": {
                    "type": "string"
                },
                "statement": {
                    "type": "string"
                },
                "statement_fingerprint": {
                    "type": "string"
                },
                "statement_id": {
                    "type": "string"
                },
                "statement_tag": {
                    "type": "string"
                },
                "statement_type": {
                    "type": "string"
                },
                "stats": {
                    "$ref": "#/definitions/statement_info.Stats"
                },
                "status": {
                    "type": "string"
                },
                "transaction_id": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "statement_info.Stats": {
            "type": "object",
            "properties": {
                "connType": {
                    "type": "number"
                },
                "memorySize": {
                    "type": "number"
                },
                "networkIO": {
                    "type": "number"
                },
                "s3IOInput": {
                    "type": "number"
                },
                "s3IOOutput": {
                    "type": "number"
                },
                "timeConsumed": {
                    "type": "number"
                },
                "version": {
                    "type": "number"
                }
            }
        },
        "system.StatementInfo": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "bytes_scan": {
                    "type": "integer"
                },
                "connection_id": {
                    "type": "integer"
                },
                "cu": {
                    "type": "number"
                },
                "database": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "error_code": {
                    "type": "string"
                },
                "exec_plan": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "node_type": {
                    "type": "string"
                },
                "node_uuid": {
                    "type": "string"
                },
                "query_type": {
                    "type": "string"
                },
                "request_at": {
                    "type": "string"
                },
                "response_at": {
                    "type": "string"
                },
                "result_count": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "integer"
                },
                "rows_read": {
                    "type": "integer"
                },
                "session_id": {
                    "type": "string"
                },
                "sql_source_type": {
                    "type": "string"
                },
                "statement": {
                    "type": "string"
                },
                "statement_fingerprint": {
                    "type": "string"
                },
                "statement_id": {
                    "type": "string"
                },
                "statement_tag": {
                    "type": "string"
                },
                "statement_type": {
                    "type": "string"
                },
                "stats": {
                    "$ref": "#/definitions/system.Stats"
                },
                "status": {
                    "type": "string"
                },
                "transaction_id": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "system.Stats": {
            "type": "object",
            "properties": {
                "connType": {
                    "type": "number"
                },
                "memorySize": {
                    "type": "number"
                },
                "networkIO": {
                    "type": "number"
                },
                "s3IOInput": {
                    "type": "number"
                },
                "s3IOOutput": {
                    "type": "number"
                },
                "timeConsumed": {
                    "type": "number"
                },
                "version": {
                    "type": "number"
                }
            }
        },
        "types.CreatePublicationResponse": {
            "type": "object"
        },
        "types.CreateSubscriptionResponse": {
            "type": "object"
        },
        "types.DeletePublicationResponse": {
            "type": "object"
        },
        "types.DeleteSubscriptionResponse": {
            "type": "object"
        },
        "types.File": {
            "type": "object",
            "properties": {
                "end_time": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "other_metadata": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "type": {
                    "type": "integer"
                },
                "update_time": {
                    "type": "integer"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "types.ListPublicationResponse": {
            "type": "object",
            "properties": {
                "pubs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Publication"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "types.ListSubscriptionResponse": {
            "type": "object",
            "properties": {
                "subs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Subscription"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "types.LoginRequest": {
            "type": "object",
            "required": [
                "account_name",
                "password",
                "username"
            ],
            "properties": {
                "account_name": {
                    "type": "string",
                    "example": "cf96d9d5_a027_4dc2_b6f1_56e530c52dc0"
                },
                "password": {
                    "type": "string",
                    "example": "your-password"
                },
                "type": {
                    "type": "string",
                    "example": "workspace"
                },
                "username": {
                    "type": "string",
                    "example": "asd:admin:accountadmin"
                }
            }
        },
        "types.LoginResponse": {
            "type": "object",
            "properties": {
                "login_at": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "types.Message": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "conversation_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "feedback": {
                    "type": "string"
                },
                "last_message_id": {
                    "type": "string"
                },
                "message_embedding_vector": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "message_id": {
                    "type": "string"
                },
                "pay_load": {
                    "$ref": "#/definitions/types.MessagePayLoad"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "types.MessageFeedbackRequest": {
            "type": "object",
            "properties": {
                "feedback": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "user_type": {
                    "type": "string"
                }
            }
        },
        "types.MessageFeedbackResponse": {
            "type": "object"
        },
        "types.MessagePayLoad": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/types.MetaData"
                },
                "page_content": {
                    "type": "string"
                }
            }
        },
        "types.MessageQueryRequest": {
            "type": "object",
            "properties": {
                "conversation_id": {
                    "type": "string"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Message"
                    }
                },
                "platform": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "user_type": {
                    "type": "string"
                }
            }
        },
        "types.MessageQueryResponse": {
            "type": "object",
            "properties": {
                "conversation_id": {
                    "type": "string"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Message"
                    }
                },
                "platform": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "user_type": {
                    "type": "string"
                }
            }
        },
        "types.MetaData": {
            "type": "object",
            "properties": {
                "embedding": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "id": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                }
            }
        },
        "types.NetworkPolicy": {
            "type": "object",
            "properties": {
                "allow_list": {
                    "description": "The list should be in CIDR format, and the length of AllowList should be less than 50",
                    "type": "array",
                    "maxItems": 50,
                    "items": {
                        "type": "string"
                    }
                },
                "block_list": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "types.Publication": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "database": {
                    "type": "string"
                },
                "instance_id": {
                    "type": "string"
                },
                "instance_name": {
                    "type": "string"
                },
                "permission": {
                    "type": "string"
                },
                "pub_name": {
                    "type": "string"
                },
                "target_instances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.TargetInstance"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "types.Quota": {
            "type": "object",
            "properties": {
                "cu": {
                    "description": "The number of CU",
                    "type": "integer"
                },
                "daily": {
                    "type": "integer"
                },
                "monthly": {
                    "type": "integer"
                },
                "storage": {
                    "description": "In bytes",
                    "type": "integer"
                },
                "unit": {
                    "description": "unit of the expense quota, \"dollar\", \"rmb\"",
                    "type": "string"
                }
            }
        },
        "types.SearchInstancesResponse": {
            "type": "object",
            "properties": {
                "instances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.TargetInstance"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "types.Subscription": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "publication": {
                    "$ref": "#/definitions/types.Publication"
                },
                "subs_name": {
                    "type": "string"
                }
            }
        },
        "types.TargetInstance": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "types.Task": {
            "type": "object",
            "properties": {
                "connector_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "creator": {
                    "type": "string"
                },
                "end_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "source_config": {
                    "$ref": "#/definitions/types.TaskSourceConfig"
                },
                "source_connector_id": {
                    "type": "integer"
                },
                "source_connector_type": {
                    "type": "integer"
                },
                "start_at": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                },
                "volume_id": {
                    "type": "string"
                },
                "volume_name": {
                    "type": "string"
                }
            }
        },
        "types.TaskSourceConfig": {
            "type": "object",
            "properties": {
                "common_file_task_config": {
                    "$ref": "#/definitions/connector.CommonFileTaskConfig"
                }
            }
        },
        "types.UpdatePublicationResponse": {
            "type": "object"
        },
        "types.UpdateSubscriptionResponse": {
            "type": "object"
        },
        "types.Usage": {
            "type": "object",
            "properties": {
                "before_convert_cu": {
                    "description": "The number of CU before convert",
                    "type": "number"
                },
                "cu": {
                    "description": "The number of CU",
                    "type": "number"
                },
                "daily_expense": {
                    "description": "The expense of the current day",
                    "type": "number"
                },
                "monthly_expense": {
                    "description": "The expense of the current month",
                    "type": "number"
                },
                "storage": {
                    "description": "In bytes",
                    "type": "integer"
                },
                "unit": {
                    "description": "unit of the expense quota, \"dollar\", \"rmb\"",
                    "type": "string"
                }
            }
        },
        "types.Volume": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "file_num": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        }
    }
}